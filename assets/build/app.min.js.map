{"version":3,"file":"app.min.js","sources":["../src/squares/helpers/cliff.js","../src/squares/cliff.js","../src/squares/grass.js","../src/squares/helpers/wall.js","../src/squares/water.js","../src/squares/tree.js","../src/squares/path.js","../src/maps/helpers.js","../src/maps/map1.js","../src/maps/map2.js","../src/maps/index.js","../src/squares/path-exit.js","../src/squares/index.js","../src/characters/stories/character1.js","../src/characters/stories/character2.js","../src/characters/stories/index.js","../src/characters/create.js","../src/characters/index.js","../src/conversations/conversation1.js","../src/conversations/conversation2.js","../src/conversations/conversation3.js","../src/conversations/index.js","../src/index.js"],"sourcesContent":["import { \r\n  MeshToonMaterial,\r\n  TextureLoader,\r\n  BoxGeometry\r\n} from 'three'\r\n\r\nconst createCliff = (app, scene, coordinates, config) => {\r\n  \r\n  const cache = app.world.cache.get(\r\n    `cliff-mesh`,\r\n    () => {\r\n\r\n      const cliffMaterial = new MeshToonMaterial({ \r\n        map:  new TextureLoader().load('./assets/ressources/world/cliff/cliff.jpg')\r\n      })\r\n\r\n      const grassMaterial = new MeshToonMaterial({ \r\n        map: new TextureLoader().load('./assets/ressources/world/grass/grass.avif')\r\n      })\r\n      \r\n      const geometry = new BoxGeometry(\r\n        app.map.squareSize,\r\n        app.map.squareSize,\r\n        app.map.squareSize\r\n      )\r\n      \r\n      return {\r\n        geometry,\r\n        material: [\r\n          cliffMaterial,\r\n          cliffMaterial,\r\n          cliffMaterial,\r\n          cliffMaterial,\r\n          grassMaterial,\r\n          cliffMaterial,\r\n        ]\r\n      }\r\n    }\r\n  )\r\n\r\n  for (let height = 0; height < config.height; height++) {\r\n    app.world.instance.add('cliff-mesh', cache.geometry, cache.material, { \r\n      position: { \r\n        x: coordinates.x[1] - app.map.squareSize / 2,\r\n        y: coordinates.y[1] - app.map.squareSize / 2, \r\n        z: (app.map.squareSize / 2) + (app.map.squareSize * height)\r\n      },\r\n      before: mesh => {\r\n        mesh.receiveShadow = true\r\n        mesh.castShadow = true\r\n        mesh.walkable = false\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport { createCliff }\r\n","import { createCliff } from './helpers/cliff'\r\n\r\nconst renderCliff = ({\r\n  scene,\r\n  coordinates,\r\n  app,\r\n  config\r\n}) => {\r\n\r\n  let maxHeight = config.height ?? 1\r\n  if( ! Array.isArray(config) ) config = [{ height : maxHeight }]\r\n\r\n  config.forEach(cliff => {\r\n    createCliff(app, scene, coordinates, cliff)\r\n    maxHeight = maxHeight < cliff.height ? cliff.height : maxHeight\r\n  })\r\n}\r\n\r\nexport { renderCliff }\r\n","import { \r\n  PlaneGeometry, \r\n  MeshToonMaterial,\r\n  TextureLoader\r\n} from 'three'\r\n\r\nconst renderGrass = ({\r\n  scene,\r\n  coordinates,\r\n  app\r\n}) => {\r\n\r\n  const cache = app.world.cache.get(\r\n    `./assets/ressources/world/grass/grass.avif`,\r\n    url => {\r\n\r\n      const texture  = new TextureLoader().load(url)\r\n      const material = new MeshToonMaterial({ map: texture })\r\n      const geometry = new PlaneGeometry(app.map.squareSize, app.map.squareSize)\r\n     \r\n      return { material, geometry }\r\n    }\r\n  )\r\n\r\n  app.world.instance.add('grass', cache.geometry, cache.material, { \r\n    before: mesh => mesh.receiveShadow = true,\r\n    position: { \r\n      x: coordinates.x[1] - app.map.squareSize / 2,\r\n      y: coordinates.y[1] - app.map.squareSize / 2,\r\n      z: 0 \r\n    }\r\n  })\r\n}\r\n\r\nexport { renderGrass }\r\n","import { \r\n  MeshToonMaterial,\r\n  TextureLoader,\r\n  BoxGeometry\r\n} from 'three'\r\n\r\nconst createWall = (app, scene, coordinates, direction, height, type = false) => {\r\n  \r\n  const isUnderwater = type === 'cliff-underwater.png'\r\n  \r\n  const cache = app.world.cache.get(\r\n      `./assets/ressources/world/cliff/${type ? type : 'cliff.jpg'}`,\r\n      url => {\r\n\r\n        const texture  = new TextureLoader().load(url)\r\n        const geometry = new BoxGeometry(\r\n          app.map.squareSize, \r\n          isUnderwater ? 0 : 40, \r\n          app.map.squareSize\r\n        )  \r\n\r\n        const imageMaterial = new MeshToonMaterial({ \r\n          map         : texture, \r\n          transparent : isUnderwater \r\n        })\r\n\r\n        const colorMaterial = new MeshToonMaterial({ \r\n          color       : 0x464237, \r\n          transparent : isUnderwater\r\n        })\r\n\r\n        return {\r\n          geometry, \r\n          material: [\r\n            colorMaterial, \r\n            colorMaterial,\r\n            colorMaterial,\r\n            imageMaterial,\r\n            colorMaterial,\r\n            colorMaterial,\r\n          ]\r\n        }\r\n      }\r\n    )\r\n  \r\n  const rotation = { x: 0, y:0, z: 0 }\r\n  const position = {\r\n    x: coordinates.x[1] - app.map.squareSize / 2,\r\n    y: coordinates.y[1] - app.map.squareSize / 2, \r\n    z: height ?? 0\r\n  }\r\n\r\n  switch(direction) {\r\n    case 'top':\r\n      position.y = (position.y + app.map.squareSize / 2) + (isUnderwater ? 0 : 20)\r\n      break;\r\n    case 'right':\r\n      rotation.z = Math.PI / 2\r\n      position.x = (position.x + app.map.squareSize / 2) + (isUnderwater ? 0 : 20)\r\n      break;\r\n    case 'left':\r\n      rotation.z = Math.PI / 2\r\n      position.x = (position.x - app.map.squareSize / 2) - (isUnderwater ? 0 : 20)\r\n      break;\r\n  }\r\n\r\n  app.world.instance.add(`cliff-mesh-${type}`, cache.geometry, cache.material, { \r\n    position,\r\n    rotation,\r\n    before: mesh => {\r\n      mesh.receiveShadow = true\r\n      mesh.castShadow = true\r\n    }\r\n  })\r\n}\r\n\r\nexport { createWall }\r\n","import { \n  PlaneGeometry, \n  Mesh,\n  ShaderMaterial,\n  ShadowMaterial\n} from 'three'\n\nimport WaterFragment from '../shaders/water.fragment.glsl'\nimport WaterVertex from '../shaders/water.vertex.glsl'\nimport { createWall } from './helpers/wall'\n\nconst renderWater = ({\n  coordinates,\n  app,\n  scene,\n  config = {}\n}) => {\n\n  /**\n   * We will use a different key for both the cache and the instanciated key according\n   * to the type of square\n   */\n  const squareKey = `water-${ config.border ?? 'regular' }`\n\n  const cache = app.world.cache.get(\n    squareKey,\n    type => {\n\n      const uniforms = {\n        uBorder : { value: getBorderType(type) },\n        uTime   : { value: 0 }\n      }\n\n      const material = new ShaderMaterial({\n        vertexShader   : WaterVertex,\n        fragmentShader : WaterFragment,\n        transparent    : true,\n        uniforms       : uniforms\n      })\n      \n      const animate = () => {\n        material.uniforms.uTime.value += 0.05\n        requestAnimationFrame(animate)\n      }\n      requestAnimationFrame(animate)\n\n      const geometry = new PlaneGeometry(app.map.squareSize, app.map.squareSize)\n      \n      return { geometry, material }\n    }\n  )\n\n  /**\n   * It's tricky to add support for shadows in a cusotm ShaderMaterial, so instead we \n   * display a ShadowMaterial at the same position than the shaders to simulate it\n   */\n  const shadow = app.world.cache.get(\n    'water-shadow',\n    () => {\n\n      const geometry = new PlaneGeometry(app.map.squareSize, app.map.squareSize)\n      const material = new ShadowMaterial({\n        opacity : 0.25, \n        color   : 0x06436d\n      })\n\n      return new Mesh(geometry, material)\n    }\n  ).clone()\n\n  const position = {\n    x: coordinates.x[1] - app.map.squareSize / 2, \n    y: coordinates.y[1] - app.map.squareSize / 2,\n    z: -20\n  }\n\n  const rotation = { \n    x: 0,\n    y: 0,\n    z: config.rotation ?? 0 \n  }\n\n  const instanceConfig = {\n    position,\n    rotation\n  }\n\n  app.world.instance.add(squareKey, cache.geometry, cache.material, {\n    ...instanceConfig,\n    before: mesh => {\n      mesh.renderOrder = 2\n      shadow.renderOrder = 3\n      shadow.receiveShadow = true\n      shadow.position.set(\n        position.x, \n        position.y, \n        position.z + 0.001\n      )\n      scene.add(shadow)\n    }\n  })\n\n  /**\n   * We add a second surface with the same material just a little below to simulate \n   * a reflexion\n   */  \n  app.world.instance.add(squareKey + '-below', cache.geometry, cache.material, { \n    ...instanceConfig,\n    position: { ...position, z: -30 },\n    before: mesh => {\n      mesh.renderOrder = 1\n    }\n  })\n\n  if( ! config.wall ) return;\n\n  config.wall.forEach(position => {\n    createWall(\n      app,\n      scene,\n      coordinates,\n      position,\n      -( app.map.squareSize / 2 ) - 1, \n      'cliff-underwater.png'\n    )\n  })\n}\n\n/**\n * There is no string type in glsl\n */\nconst getBorderType = name => ({\n  'water-regular'    : 0,\n  'water-one-side'   : 1,\n  'water-both-side'  : 2,\n  'water-three-side' : 3,\n  'water-corner'     : 4\n}[name])\n\nexport { renderWater }\n","import { renderGrass } from './grass'\n\nconst renderTree = ({\n  coordinates,\n  app,\n  config,\n  scene\n}) => {\n\n  renderGrass({ coordinates, app, scene, config })\n  \n  app.world.add(\n    `./assets/ressources/world/tree/forest${config.type ?? 1}.fbx`,\n    { walkable: false },\n    tree => {\n\n      tree.position.set(\n        coordinates.x[1] - app.map.squareSize / 2, \n        coordinates.y[1] - app.map.squareSize / 2,\n        config.height ?? -10\n      )\n      \n      tree.scale.set( 0.2, 0.2, 0.2 )\n      tree.rotation.x = Math.PI / 2\n      tree.castShadow = true\n      tree.receiveShadow = true\n\n      scene.add(tree)\n    }\n  )\n}\n\nexport { renderTree }\n","import { createWall } from './helpers/wall'\r\nimport { \r\n  PlaneGeometry, \r\n  TextureLoader,\r\n  MeshToonMaterial\r\n} from 'three'\r\n\r\nconst renderPath = ({\r\n  coordinates,\r\n  app,\r\n  scene,\r\n  config\r\n}) => {\r\n\r\n  const key = `path-${config.type ?? 'narow'}`\r\n  const cache = app.world.cache.get(\r\n    `./assets/ressources/world/path/${key}.jpg`,\r\n    url => {\r\n\r\n      const texture  = new TextureLoader().load(url)\r\n      const material = new MeshToonMaterial({ map: texture })\r\n      const geometry = new PlaneGeometry(app.map.squareSize, app.map.squareSize)\r\n      \r\n      return { geometry, material }\r\n    }\r\n  )\r\n\r\n  app.world.instance.add(key, cache.geometry, cache.material, { \r\n    before: mesh => mesh.receiveShadow = true,\r\n    position: { \r\n      x: coordinates.x[1] - app.map.squareSize / 2,\r\n      y: coordinates.y[1] - app.map.squareSize / 2,\r\n      z: 0 \r\n    }\r\n  })\r\n\r\n  if( ! config.wall ) return; \r\n\r\n  config.wall.forEach(position => {\r\n    createWall(\r\n      app, \r\n      scene, \r\n      coordinates, \r\n      position, \r\n      -( app.map.squareSize / 2 ) + 50\r\n    )\r\n  })\r\n}\r\n\r\nexport { renderPath }\r\n","const area = (x, y, data) => {\n  const response = {}\n  for (let i = x[0]; i <= x[1]; i++) {\n    for (let j = y[0]; j <= y[1]; j++) {\n      response[ `${i}|${j}` ] = data \n    }\n  }\n  return response\n}\n\nconst platform = (x, y) => ({\n  [`${x + 4}|${y + 2}`] : { type: 'water', config: { border: 'one-side', rotation: Math.PI / 2, wall: [ 'left' ] } },\n  [`${x + 3}|${y + 2}`] : { type: 'path', config: { type: 'full' } },\n  [`${x + 2}|${y + 2}`] : { type: 'path', config: { type: 'full' } },\n  [`${x + 1}|${y + 2}`] : { type: 'path', config: { type: 'full' } },\n  [`${x    }|${y + 2}`] : { type: 'water', config: { border: 'one-side', rotation: -Math.PI / 2 } },\n\n  [`${x + 4}|${y + 1}`] : { type: 'water', config: { border: 'one-side', rotation: Math.PI / 2, wall: [ 'left' ] } },\n  [`${x + 3}|${y + 1}`] : { type: 'path', config: { type: 'full' } },\n  [`${x + 2}|${y + 1}`] : { type: 'tree', config: { type: 4 } },\n  [`${x + 1}|${y + 1}`] : { type: 'path', config: { type: 'full' } },\n  [`${x    }|${y + 1}`] : { type: 'water', config: { border: 'one-side', rotation: -Math.PI / 2 } },\n\n  [`${x + 4}|${y    }`] : { type: 'water', config: { border: 'one-side', rotation: Math.PI / 2, wall: [ 'left' ] } },\n  [`${x + 3}|${y    }`] : { type: 'path', config: { type: 'full' } },\n  [`${x + 2}|${y    }`] : { type: 'path', config: { type: 'full' } },\n  [`${x + 1}|${y    }`] : { type: 'path', config: { type: 'full' } },\n  [`${x    }|${y    }`]     : { type: 'water', config: { border: 'one-side', rotation: -Math.PI / 2 } },\n})\n\nconst waterPath = (x, y) => {\n  \n  const items = [...Array(y[1] - y[0])]\n    .map((empty, index) => (index + y[0]))\n    .map((value) => ({\n        [`${x - 1}|${value}`] : { type: 'water', config: { border: 'one-side', rotation: -Math.PI / 2 } }, \n        [`${x    }|${value}`] : { type: 'path', config: { type: 'full' } }, \n        [`${x + 1}|${value}`] : { type: 'water', config: { border: 'one-side', wall: [ 'left' ], rotation: Math.PI / 2 } },\n      }))\n\n  return items.reduce((object, item) => ({\n    ...object, \n    ...item\n  }), {})\n}\n\nexport { \n  area,\n  platform,\n  waterPath\n}\n","import { \n  area, \n  platform \n} from './helpers'\n\nconst map1 = {\n\n  ...area([3, 8], [3, 15], { type: 'water' }),\n  ...area([-8, 3], [9, 15], { type: 'water' }),\n  ...area([-8, -3], [5, 9], { type: 'water' }),\n\n  '-2|8': { type: 'water' },\n  ...area([-1, 1], [8, 8], { type: 'water', config: { border: 'one-side', rotation: Math.PI } }),\n  '2|8': { type: 'water' },\n\n  ...platform(-2, 5),\n  \n  ...area([-8, -3], [4, 4], { type: 'water', config: { border: 'one-side', rotation: Math.PI } }),\n  '-2|4': { type: 'water' },\n  '-1|4': { type: 'water', config: { border: 'corner', wall: [ 'top' ] } },\n  '0|4': { type: 'path', config: { type: 'full' } },\n  '1|4': { type: 'water', config: { border: 'corner', wall: [ 'left', 'top' ], rotation: Math.PI / 2 } },\n  '2|4': { type: 'water' },\n\n  ...area([-8, -4], [3, 3], { type: 'grass' }),\n  '-3|3': { type: 'cliff', config: [{ position: 'right', height: 1 }] },\n  '-2|3': { type: 'water', config: { border: 'corner', wall: [ 'left' ], rotation: Math.PI } },\n  '-1|3': { type: 'water', config: { border: 'one-side', rotation: - Math.PI / 2 } },\n  '0|3': { type: 'path', config: { type: 'full' } },\n  '1|3': { type: 'water', config: { border: 'one-side', wall: [ 'left' ], rotation: Math.PI / 2 } },\n  '2|3': { type: 'water' },\n\n  ...area([-6, -8], [2, 2], { type: 'grass' }),\n  '-5|2': { type: 'cliff', config: [{ position: 'bottom', height: 1 }] },\n  '-4|2': { type: 'cliff', config: [{ position: 'bottom', height: 2 }] },\n  '-3|2': { type: 'cliff', config: [{ position: 'right', height: 2 }, { position: 'bottom', height: 2 }] },\n  '-2|2': { type: 'cliff', config: [{ position: 'right', height: 1 }, { position: 'bottom', height: 1 }] },\n  '-1|2': { type: 'water', config: { border: 'three-side', wall: [ 'left' ], rotation: - Math.PI / 2 } },\n  '0|2': { type: 'path', config: { type: 'full' } },\n  '1|2': { type: 'water', config: { border: 'corner', wall: [ 'left' ], rotation: Math.PI } },\n  '2|2': { type: 'water', config: { border: 'one-side', rotation: Math.PI } },\n  ...area([3, 6], [2, 2], { type: 'water' }),\n  '7|2': { type: 'water', config: { border: 'one-side', rotation: Math.PI } },\n  '8|2': { type: 'water', config: { border: 'corner', rotation: - Math.PI / 2 } },\n\n  '-8|1': { type: 'grass' },\n  '-7|1': { type: 'grass' },\n  '-6|1': { type: 'grass' },\n  '-5|1': { type: 'cliff', config: [{ position: 'bottom', height: 1 }] },\n  '-4|1': { type: 'cliff', config: [{ position: 'bottom', height: 2 }] },\n  '-3|1': { type: 'cliff', config: [{ position: 'right', height: 2 }, { position: 'bottom', height: 2 }] },\n  '-2|1': { type: 'cliff', config: [{ position: 'right', height: 1 }, { position: 'bottom', height: 1 }] },\n  '-1|1': { type: 'tree', config: { type: 2 } },\n  '0|1': { type: 'path' },\n  '1|1': { type: 'grass' },\n  '2|1': { type: 'tree', config: { type: 1 } },\n  '3|1': { type: 'water', config: { border: 'one-side', wall: [ 'left' ], rotation: Math.PI / 2 } },\n  '4|1': { type: 'water' },\n  '5|1': { type: 'water' },\n  '6|1': { type: 'water', config: { border: 'corner', rotation: - Math.PI / 2 } },\n  '7|1': { type: 'grass' },\n  '8|1': { type: 'grass' },\n\n  '-8|0': { type: 'water', config: { border: 'one-side', wall: [ 'top' ] } },\n  '-7|0': { type: 'water', config: { border: 'one-side', wall: [ 'top' ] } },\n  '-6|0': { type: 'water', config: { border: 'corner', wall: [ 'top' ] } },\n  '-5|0': { type: 'tree', config: { type: 8 } },\n  '-4|0': { type: 'cliff', config: [{ position: 'bottom', height: 1 }] },\n  '-3|0': { type: 'cliff', config: [{ position: 'right', height: 1 }, { position: 'bottom', height: 1 }] },\n  '-2|0': { type: 'grass' },\n  '-1|0': { type: 'grass' },\n  '0|0': { type: 'path' },\n  '1|0': { type: 'grass' },\n  '2|0': { type: 'water', config: { border: 'three-side', wall: [ 'left', 'top' ], rotation: Math.PI } },\n  '3|0': { type: 'water' },\n  '4|0': { type: 'water' },\n  '5|0': { type: 'water', config: { border: 'corner', rotation: - Math.PI / 2 } },\n  '6|0': { type: 'grass' },\n  '7|0': { type: 'grass' },\n  '8|0': { type: 'grass' },\n\n  '-8|-1': { type: 'water', config: { border: 'one-side', rotation: Math.PI } },\n  '-7|-1': { type: 'water', config: { border: 'one-side', rotation: Math.PI } },\n  '-6|-1': { type: 'water' },\n  '-5|-1': { type: 'water', config: { border: 'one-side', wall: [ 'top' ] } },\n  '-4|-1': { type: 'water', config: { border: 'one-side', wall: [ 'top' ] } },\n  '-3|-1': { type: 'water', config: { border: 'one-side', wall: [ 'top' ] } },\n  '-2|-1': { type: 'water', config: { border: 'corner', wall: [ 'top' ] } },\n  '-1|-1': { type: 'tree', config: { type: 4 } },\n  '0|-1': { type: 'path' },\n  '1|-1': { type: 'grass' },\n  '2|-1': { type: 'tree', config: { type: 3 } },\n  '3|-1': { type: 'water', config: { border: 'one-side', wall: [ 'left' ], rotation: Math.PI / 2 } },\n  '4|-1': { type: 'water', config: { border: 'one-side', rotation: - Math.PI / 2 } },\n  '5|-1': { type: 'grass' },\n  '6|-1': { type: 'grass' },\n  '7|-1': { type: 'grass' },\n  '8|-1': { type: 'grass' },\n\n  '-8|-2': { type: 'grass' },\n  '-7|-2': { type: 'grass' },\n  '-6|-2': { type: 'water', config: { border: 'corner', wall: [ 'left' ], rotation: Math.PI } },\n  '-5|-2': { type: 'water' },\n  '-4|-2': { type: 'water' },\n  '-3|-2': { type: 'water' },\n  '-2|-2': { type: 'water', config: { border: 'one-side', rotation: Math.PI } },\n  '-1|-2': { type: 'water', config: { border: 'both-side', wall: [ 'top' ] } },\n  '0|-2': { type: 'path', config: { type: 'full', wall: [ 'right', 'left' ] } },\n  '1|-2': { type: 'water', config: { border: 'both-side', wall: [ 'top' ] } },\n  '2|-2': { type: 'water', config: { border: 'one-side', wall: [ 'top' ] } },\n  '3|-2': { type: 'water' },\n  '4|-2': { type: 'water', config: { border: 'corner', rotation: - Math.PI / 2  } },\n  '5|-2': { type: 'grass' },\n  '6|-2': { type: 'water', config: { border: 'corner', rotation: Math.PI / 2, wall: [ 'left', 'top' ]  } },\n  '7|-2': { type: 'water', config: { border: 'both-side', wall: [ 'top' ] }  },\n  '8|-2': { type: 'grass' },\n\n  '-8|-3': { type: 'grass' },\n  '-7|-3': { type: 'grass' },\n  '-6|-3': { type: 'tree' },\n  '-5|-3': { type: 'cliff', config: [{ position: 'right', height: 1 }] },\n  '-4|-3': { type: 'water', config: { border: 'one-side', rotation: Math.PI / 2, wall: [ 'left' ] } },\n  '-3|-3': { type: 'water', config: { border: 'one-side', rotation: - Math.PI / 2 } },\n  '-2|-3': { type: 'grass' },\n  '-1|-3': { type: 'grass' },\n  '0|-3': { type: 'path' },\n  '1|-3': { type: 'tree', config: { type: 1 } },\n  '2|-3': { type: 'water', config: { border: 'corner', rotation: Math.PI, wall: [ 'left' ] } },\n  '3|-3': { type: 'water', config: { border: 'one-side', rotation: - Math.PI / 2 } },\n  '4|-3': { type: 'tree', config: { type: 4 } },\n  '5|-3': { type: 'grass' },\n  '6|-3': { type: 'water', config: { border: 'both-side', wall: [ 'left' ], rotation: - Math.PI / 2 } },\n  '7|-3': { type: 'grass' },\n  '8|-3': { type: 'grass' },\n\n  '-8|-4': { type: 'grass' },\n  '-7|-4': { type: 'grass' },\n  '-6|-4': { type: 'grass' },\n  '-5|-4': { type: 'cliff', config: [{ position: 'right', height: 1 }] },\n  '-4|-4': { type: 'water', config: { border: 'one-side', rotation: Math.PI / 2, wall: [ 'left' ] } },\n  '-3|-4': { type: 'cliff', config: [{ position: 'right', height: 1 }] },\n  '-2|-4': { type: 'grass' },\n  '-1|-4': { type: 'tree', config: { type: 2 } },\n  '0|-4': { type: 'path' },\n  '1|-4': { type: 'grass' },\n  '2|-4': { type: 'grass' },\n  '3|-4': { type: 'water', config: { border: 'one-side', rotation: Math.PI / 2, wall: [ 'left' ] } },\n  '4|-4': { type: 'water', config: { border: 'one-side', wall: [ 'top' ] } },\n  '5|-4': { type: 'water', config: { border: 'one-side', wall: [ 'top' ] } },\n  '6|-4': { type: 'water', config: { border: 'one-side', rotation: -Math.PI / 2 } },\n  '7|-4': { type: 'grass' },\n  '8|-4': { type: 'grass' },\n\n  '-8|-5': { type: 'cliff', config: { height: 2 } },\n  '-7|-5': { type: 'cliff', config: { height: 2 } },\n  '-6|-5': { type: 'cliff', config: { height: 2 } },\n  '-5|-5': { type: 'cliff', config: [{ position: 'right', height: 2 }] },\n  '-4|-5': { type: 'water', config: { border: 'both-side', rotation: Math.PI / 2, wall: [ 'left' ] } },\n  '-3|-5': { type: 'cliff', config: [{ position: 'right', height: 2 }, { position: 'bottom', height: 2 }] },\n  '-2|-5': { type: 'cliff', config: [{ position: 'right', height: 1 }] },\n  '-1|-5': { type: 'grass' },\n  '0|-5': { type: 'path' },\n  '1|-5': { type: 'grass' },\n  '2|-5': { type: 'tree', config: { type: 4 } },\n  '3|-5': { type: 'water', config: { border: 'corner', rotation: Math.PI, wall: [ 'left' ] } },\n  '4|-5': { type: 'water', config: { border: 'one-side', rotation: Math.PI } },\n  '5|-5': { type: 'water' },\n  '6|-5': { type: 'water' },\n  '7|-5': { type: 'water', config: { border: 'corner', wall: [ 'top' ] } },\n  '8|-5': { type: 'grass' },\n\n  '-8|-6': { type: 'cliff', config: { height: 2 } },\n  '-7|-6': { type: 'cliff', config: { height: 2 } },\n  '-6|-6': { type: 'cliff', config: { height: 2 } },\n  '-5|-6': { type: 'cliff', config: [{ position: 'right', height: 2 }, { position: 'bottom', height: 2 }] },\n  '-4|-6': { type: 'water', config: { border: 'one-side', rotation: Math.PI / 2, wall: [ 'left' ] } },\n  '-3|-6': { type: 'water', config: { border: 'corner', wall: [ 'top' ] } },\n  '-2|-6': { type: 'cliff', config: [{ position: 'bottom', height: 1 }] },\n  '-1|-6': { type: 'cliff', config: [{ position: 'right', height: 1 }, { position: 'bottom', height: 1 }] },\n  '0|-6': { type: 'path-exit', config: { map: 'map2', square: '0|1', arrow: 'bottom' } },\n  '1|-6': { type: 'grass' },\n  '2|-6': { type: 'cliff' },\n  '3|-6': { type: 'cliff', config: [{ position: 'right', height: 1 }] },\n  '4|-6': { type: 'grass'},\n  '5|-6': { type: 'water', config: { border: 'corner', rotation: Math.PI, wall: [ 'left' ] } },\n  '6|-6': { type: 'water', config: { border: 'one-side', rotation: Math.PI } },\n  '7|-6': { type: 'water', config: { border: 'corner', rotation: - Math.PI / 2 } },\n  '8|-6': { type: 'grass' },\n\n  '-8|-7': { type: 'cliff', config: { height: 2 } },\n  '-7|-7': { type: 'cliff', config: { height: 2 } },\n  '-6|-7': { type: 'cliff', config: [{ position: 'right', height: 2 }] },\n  '-5|-7': { type: 'cliff', config: [{ position: 'right', height: 1 }] },\n  '-4|-7': { type: 'water' },\n  '-3|-7': { type: 'water' },\n  '-2|-7': { type: 'water', config: { border: 'both-side', wall: [ 'top' ] } },\n  '-1|-7': { type: 'water', config: { border: 'three-side', wall: [ 'top' ] } },\n  '0|-7': { type: 'path' },\n  '1|-7': { type: 'cliff' },\n  '2|-7': { type: 'cliff' },\n  '3|-7': { type: 'cliff', config: [{ position: 'right', height: 1 }] },\n  '4|-7': { type: 'tree' },\n  '5|-7': { type: 'grass'},\n  '6|-7': { type: 'grass'},\n  '7|-7': { type: 'grass'},\n  '8|-7': { type: 'grass'},\n\n  '-8|-8': { type: 'cliff', config: { height: 2 } },\n  '-7|-8': { type: 'cliff', config: { height: 2 } },\n  '-6|-8': { type: 'cliff', config: { height: 2 } },\n  '-5|-8': { type: 'cliff', config: { height: 2 } },\n  '-4|-8': { type: 'cliff', config: { height: 2 } },\n  '-3|-8': { type: 'cliff', config: [{ position: 'right', height: 2 }] },\n  '-2|-8': { type: 'tree', config: { type: 6 } },\n  '-1|-8': { type: 'grass' },\n  '0|-8': { type: 'path' },\n  '1|-8': { type: 'cliff' },\n  '2|-8': { type: 'cliff' },\n  '3|-8': { type: 'cliff', config: [{ position: 'right', height: 1 }] },\n  '4|-8': { type: 'grass' },\n  '5|-8': { type: 'grass'},\n  '6|-8': { type: 'grass'},\n  '7|-8': { type: 'grass'},\n  '8|-8': { type: 'grass'},\n  \n  '-8|-9': { type: 'cliff', config: { height: 2 } },\n  '-7|-9': { type: 'cliff', config: { height: 2 } },\n  '-6|-9': { type: 'cliff', config: { height: 2 } },\n  '-5|-9': { type: 'cliff', config: { height: 2 } },\n  '-4|-9': { type: 'cliff', config: { height: 2 } },\n  '-3|-9': { type: 'cliff', config: [{ position: 'right', height: 2 }] },\n  '-2|-9': { type: 'cliff', config: {  height: 1 } },\n  '-1|-9': { type: 'cliff', config: [{ position: 'right', height: 1 }] },\n  '0|-9': { type: 'path' },\n  '1|-9': { type: 'cliff' },\n  '2|-9': { type: 'cliff' },\n  '3|-9': { type: 'cliff', config: [{ position: 'right', height: 1 }] },\n  ...area([4, 8], [-9, -9], { type: 'grass' }),\n\n  ...area([-8, -3], [-10, -10], { type: 'cliff', config: { height: 2 } }),\n  ...area([-2, -1], [-10, -10], { type: 'cliff', config: [{ position: 'right', height: 2 }, { position: 'bottom', height: 2 }] }),\n  '0|-10': { type: 'path' },\n  ...area([1, 10], [-10, -10], { type: 'cliff', config: [{ position: 'bottom', height: 1 }] }),\n\n  ...area([-8, -1], [-11, -11], { type: 'grass' }),\n  '0|-11': { type: 'path' },\n  ...area([1, 8], [-11, -11], { type: 'grass' }),\n}\n\nexport { map1 }\n","import { \n  area, \n  platform,\n  waterPath \n} from './helpers'\n\nconst map2 = {\n\n  ...area([-11, 11], [-11, 11], { type : 'water' }),\n  ...waterPath(0, [3, 11]),\n\n  '-2|2': { type: 'grass' },\n\n  ...area([-4, -2], [3, 3], { type : 'water', config: { border: 'one-side', rotation: Math.PI } }),\n\n  '1|3': { type: 'water', config: { border: 'corner', rotation: Math.PI, wall: [ 'left' ]} },\n\n  '-5|2': { type: 'water', config: { border: 'one-side', rotation: - Math.PI / 2 } },\n  ...area([-4, -2], [2, 2], { type : 'grass' }),\n  '-1|2': { type: 'water', config: { border: 'three-side', rotation: -Math.PI / 2, wall: [ 'left' ] } },\n  '0|2': { type: 'path-exit', config: { map: 'map1', square: '0|-5', arrow: 'top' } },\n  '1|2': { type: 'grass' },\n  '2|2': { type: 'water', config: { border: 'corner', rotation: Math.PI, wall: [ 'left' ]} },\n\n  '-4|1': { type: 'water', config: { border: 'corner', wall: [ 'top' ] } },\n  '-3|1': { type: 'tree', config: { type: 4 } },\n  '-2|1': { type:  'grass' },\n  '-1|1': { type: 'grass' },\n  '0|1': { type: 'path' },\n  '1|1': { type: 'tree', config: { type: 1 } },\n  '2|1': { type: 'grass' },\n  '3|1': { type: 'water', config: { border: 'corner', rotation: Math.PI, wall: [ 'left' ]} },\n\n  '-3|0': { type: 'water', config: { border: 'corner', wall: [ 'top' ] } },\n  '-2|0': { type: 'grass' },\n  '-1|0': { type: 'grass' },\n  '0|0': { type: 'path' },\n  '1|0': { type: 'grass' },\n  '2|0': { type: 'tree', config: { type: 2 } },\n  '3|0': { type: 'grass' },\n  ...area([4, 4], [-1, 0], { type: 'water', config: { border: 'one-side', rotation: Math.PI / 2, wall: [ 'left' ]} }),\n\n\n  '-2|-1': { type: 'water', config: { border: 'corner', wall: [ 'top' ] } },\n  '-1|-1': { type: 'tree', config: { type: 2 } },\n  '0|-1': { type: 'path' },\n  '1|-1': { type: 'grass' },\n  '2|-1': { type: 'grass' },\n  '3|-1': { type: 'grass' },\n\n  '-2|-2': { type: 'water' },\n  '-1|-2': { type: 'water', config: { border: 'corner', wall: [ 'top' ] } },\n  '0|-2': { type: 'path', config: { type: 'full' } },\n  '1|-2': { type: 'water', config: { border: 'three-side', rotation: Math.PI / 2, wall: [ 'top', 'left' ] } },\n  '2|-2': { type: 'grass' },\n  '3|-2': { type: 'water', config: { border: 'corner', wall: [ 'top', 'left' ], rotation: Math.PI / 2 } },\n\n  '0|-3': { type: 'path', config: { type: 'full' } },\n  '2|-3': { type: 'water', config: { border: 'one-side', wall: [ 'top' ] } },\n  '1|-3': { type: 'water', config: { border: 'corner', rotation: Math.PI, wall: [ 'left' ] } },\n  '-1|-3': { type: 'water', config: { border: 'corner', rotation: -Math.PI / 2 } },\n  '-2|-3': { type: 'water' },\n\n  ...platform(-2, -6),\n\n  '0|-7': { type: 'water', config: { border: 'one-side', wall: [ 'top' ] } },\n  '2|-7': { type: 'water' },\n  '1|-7': { type: 'water', config: { border: 'one-side', wall: [ 'top' ] } },\n  '-1|-7': { type: 'water', config: { border: 'one-side', wall: [ 'top' ] } },\n  '-2|-7': { type: 'water' },\n}\n\nexport { map2 }\n","import { map1 } from './map1'\nimport { map2 } from './map2'\n\nexport default { \n  map1, \n  map2 \n}\n","import maps from '../maps/'\nimport { renderPath } from './path'\n\nconst renderExitPath = ({\n  coordinates,\n  app,\n  config,\n  key,\n  scene\n}) => {\n\n  renderPath({ \n    app, \n    coordinates, \n    scene, \n    config: { \n      ...config,\n      type: 'narow'\n    } \n  })\n\n  const maybeLoadMap = ({\n    character\n  }) => {\n\n    if( character.name !== 'main' ) return;\n\n    const square = app.map.getSquareByCoordinates(character.object.position)\n    \n    if( square.key !== key ) return;\n\n    const mapName = config.map ?? 'map1'\n    const initialSquare = config.square ?? '0|0'\n    \n    app.map.load(\n      mapName, \n      maps[ mapName ], \n      initialSquare\n    )\n\n    app.hooks.removeAction('characterMoved', maybeLoadMap)\n  }\n\n  /**\n   * Leave the map when character arrive on the square\n   */\n  app.hooks.addAction('characterMoved', maybeLoadMap)\n}\n\nexport { renderExitPath }\n","import { renderCliff } from './cliff'\nimport { renderGrass } from './grass'\nimport { renderWater } from './water'\nimport { renderTree } from './tree'\nimport { renderPath } from './path'\nimport { renderExitPath } from './path-exit'\n\nconst registerSquares = app =>  {\n\n  app.map.registerSquareType('cliff', {\n    render   : renderCliff,\n    walkable : false\n  })\n\n  app.map.registerSquareType('grass', {\n    render   : renderGrass,\n    walkable : true\n  })\n\n  app.map.registerSquareType('water', {\n    render   : renderWater,\n    walkable : false\n  })\n\n  app.map.registerSquareType('tree', {\n    render   : renderTree,\n    walkable : true\n  })\n\n  app.map.registerSquareType('path', {\n    render   : renderPath,\n    walkable : true\n  })\n\n  app.map.registerSquareType('path-exit', {\n    render   : renderExitPath,\n    walkable : true\n  })\n}\n\nexport { \n  registerSquares,\n}\n","export default [\n  // River -> Central path -> Side of the bridge\n  character => character.actions.moveToSquare.start('0|-2', {}, 'walk'),\n  character => character.actions.moveToSquare.start('0|-2', { x: -50 }, 'walk'),\n  // Wait for 5 second\n  character => character.actions.wait.start(5000, 'stretch'),\n  // Side of the bridge -> Top of path -> River\n  character => character.actions.moveToSquare.start('-2|0', { x: -50 }, 'walk'),\n  character => character.actions.moveToSquare.start('-2|0', { x: -50, y: -50 }, 'walk'),\n  // Wait for 5 second\n  character => character.actions.wait.start(5000, 'stretch'),\n  // River -> Top of the path -> Side of the bridge\n  character => character.actions.moveToSquare.start('0|-2', {}, 'walk'),\n  character => character.actions.moveToSquare.start('0|-2', { x: 50 }, 'walk'),\n  // Wait for 5 second\n  character => character.actions.wait.start(5000, 'stretch'),\n  // Side of the bridge -> Bottom of the path -> River\n  character => character.actions.moveToSquare.start('2|-4', {}, 'walk'),\n  character => character.actions.moveToSquare.start('2|-4', { y: +50 }, 'walk'),\n  // Wait for 5 second\n  character => character.actions.wait.start(5000, 'stretch'),\n  // Start again!\n]\n","export default [\n  // Go next to the sea\n  character => character.actions.moveToSquare.start('1|-5', {}, 'walk'),\n  character => character.actions.moveToSquare.start('1|-5', { x: +75 }, 'walk'),\n  // Wait for 5 second\n  character => character.actions.wait.start(5000, 'stretch'),\n  // Go on the other side\n  character => character.actions.moveToSquare.start('1|-5', {}, 'walk'),\n  character => character.actions.moveToSquare.start('0|-6', {}, 'walk'),\n  character => character.actions.moveToSquare.start('-1|-5', {}, 'walk'),\n  character => character.actions.moveToSquare.start('-1|-5', { x: -75 }, 'walk'),\n  // Wait for 5 second\n  character => character.actions.wait.start(5000, 'stretch'),\n  // Go back to the initial position\n  character => character.actions.moveToSquare.start('-1|-5', {}, 'walk'),\n  character => character.actions.moveToSquare.start('-1|-4', {}, 'walk'),\n  // Start again!\n]\n","import story1 from './character1'\nimport story2 from './character2'\n\nexport default [\n  story1,\n  story2\n]\n","const createCharacter = (\n  app, \n  name, \n  color, \n  callback = false, \n  attributes = {}\n) => {\n\n  const folder = './assets/ressources/characters/'\n  \n  /**\n   * Give possibiity to change default url for the texture (use different texture for npc)\n   */\n  const changeTexture = url => (\n    url.includes('Peasant Nolant') && url.includes('.png')\n      ? folder + 'peasant/' + color + '.png'\n      : url\n  )\n  app.hooks.addFilter('loadRessourceURL', changeTexture)\n\n  app.characters.add({\n    name       : name,\n    file       : folder + 'peasant/peasant.fbx',\n    card       : folder + 'main/main.png',\n    animations : {\n      run     : folder + 'peasant/animations/run.fbx', \n      idle    : folder + 'peasant/animations/idle.fbx',\n      angry   : folder + 'peasant/animations/angry.fbx',\n      walk    : folder + 'peasant/animations/walk.fbx',\n      stretch : folder + 'peasant/animations/stretch.fbx',\n      sit     : folder + 'peasant/animations/sit.fbx',\n      look    : folder + 'peasant/animations/look.fbx',\n    },\n    attributes : {\n      speed: {\n        run: 0.5,\n        walk: 0.13\n      },\n      ...attributes\n    }\n  }, character => {\n\n    /**\n     * Only the main character has the privilege of the hat\n     */\n    if( character.name !== 'main' ) {\n      character.object.children[1].removeFromParent()\n    }\n    character.object.scale.set(0.5, 0.5, 0.5)\n    character.object.rotation.x = Math.PI / 2\n\n    app.hooks.removeFilter('loadRessourceURL', changeTexture)\n    callback(character)\n  })\n}\n\nexport default createCharacter\n","import {\r\n  ShaderMaterial,\r\n  Color,\r\n  FrontSide,\r\n  AdditiveBlending,\r\n  Mesh,\r\n  MeshBasicMaterial,\r\n  BoxGeometry,\r\n\tSphereGeometry\r\n} from 'three'\r\n\r\nimport GlowFragment from '../shaders/glow.fragment.glsl'\r\nimport GlowVertex from '../shaders/glow.vertex.glsl'\r\n\r\nimport maps from '../maps/'\r\nimport stories from './stories/'\r\nimport createCharacter from './create'\r\n\r\nconst init = app => {\r\n\r\n  /**\r\n   * Main character\r\n   */\r\n  createCharacter(app, 'main', 'yellow', character => {\r\n    app.characters.setMain(character.name)\r\n    app.map.load('map1', maps['map1'], '0|0')\r\n  })\r\n\r\n  /**\r\n   * NPC on map1\r\n   */\r\n  app.hooks.addAction('mapLoaded', args => {\r\n\r\n    if( args.name !== 'map1' ) return;\r\n\r\n    createCharacter(app, 'peasant1', 'brown', character => {\r\n\r\n      app.map.current.scene.add(character.object)\r\n      app.map.moveCharacterOnSquare('2|-4', character)\r\n\r\n      // Loop on defined actions\r\n      const doAction = index => {\r\n        if( app.map.current.name !== 'map1' ) return;\r\n        stories[0][ index ](character).then(() => doAction(\r\n          stories[0].length - 1 !== index ? index + 1 : 0 \r\n        ))\r\n      }\r\n      doAction(0)\r\n    })\r\n  })\r\n\r\n  /**\r\n   * NPC on map2\r\n   */\r\n  app.hooks.addAction('mapLoaded', args => {\r\n\r\n    if( args.name !== 'map2' ) return;\r\n\r\n    createCharacter(app, 'peasant2', 'green', character => {\r\n      \r\n      app.map.current.scene.add(character.object)\r\n      app.map.moveCharacterOnSquare('0|-1', character)\r\n\r\n      // Loop on defined actions\r\n      const doAction = index => {\r\n        if( app.map.current.name !== 'map2' ) return;\r\n        stories[1][ index ](character).then(() => doAction(\r\n          stories[1].length - 1 !== index ? index + 1 : 0 \r\n        ))\r\n      }\r\n      doAction(0)\r\n    })\r\n\r\n    createCharacter(app, 'peasant3', 'blue', character => {\r\n\r\n      app.map.current.scene.add(character.object)\r\n\r\n      const coordinates = app.map.getCoordinateBySquare('2|-2')\r\n      character.startAnimation('sit')\r\n      character.object.position.set(\r\n        coordinates.x - 75,\r\n        coordinates.y - 100,\r\n        -10\r\n      )\r\n    })\r\n  })\r\n\r\n  /**\r\n   * Highlight character on mouseover\r\n   */\r\n  app.hooks.addAction('mapLoaded', args => {\r\n\r\n    /**\r\n     * @see https://github.com/stemkoski/stemkoski.github.com/blob/master/Three.js/Shader-Glow.html\r\n     */\r\n    const mesh = app.world.cache.get('glow-material', () => {\r\n\r\n      const sphere = new SphereGeometry(app.map.squareSize / 4, 15, 15)\r\n      const material = new ShaderMaterial({\r\n        vertexShader   : GlowVertex,\r\n        fragmentShader : GlowFragment,\r\n        side           : FrontSide,\r\n        blending       : AdditiveBlending,\r\n        transparent    : true,\r\n        uniforms       : { \r\n          c          : { type: 'f',  value: 1.0 },\r\n          p          : { type: 'f',  value: 4.2 },\r\n          glowColor  : { type: 'c',  value: new Color(0xFFFF00) },\r\n          viewVector : { type: 'v3', value: app.camera.position }\r\n        }\r\n      })\r\n      \r\n      const mesh = new Mesh(sphere, material) \r\n      mesh.renderOrder = 2 \r\n      \r\n      return mesh\r\n    })\r\n\r\n    app.hooks.addAction('mouseEnterCharacter', ({ character }) => {\r\n      if( character.name === 'main' ) app.map.current.scene.remove(mesh)\r\n    })\r\n\r\n    app.hooks.addAction('mouseOnCharacter', ({ character }) => {\r\n      if( character.name === 'main' ) return app.map.current.scene.remove(mesh)\r\n      mesh.position.set(\r\n        character.object.position.x,\r\n        character.object.position.y,\r\n        character.object.position.z + app.map.squareSize / 4\r\n      )\r\n      app.map.current.scene.add(mesh)\r\n    })\r\n\r\n    app.hooks.addAction('mouseLeaveCharacter', () => {\r\n      app.map.current.scene.remove(mesh)\r\n    })\r\n  })\r\n}\r\n\r\nexport { init }\r\n","export default [\n  {\n    character: 'helpful-peasant',\n    content: [\n      \"Do you think this blue thing is supposed to be a river?\",\n      \"I'm sorry, that's a rhetorical question. You can't really participate to any conversations in this world, for now at least. I've heard it might change in the future.\",\n      \"I can give you a few tips if you want.\"\n    ],\n  },\n  {\n    character: 'helpful-peasant',\n    content: [\n      \"First, you can change the position of the camera by pressing C. It will switch to a top-down view.\",\n      \"Some hitboxes are a bit wide, especially near the trees. Changing the view can help you visualize this.\"\n    ],\n  },\n  {\n    character: 'helpful-peasant',\n    content: [\n      \"You can leave this map and head toward a small island by following the path down. There are other people there but they don't have a lot to say.\",\n      \"If you choose to go there, you can still come back afterward.\"\n    ]\n  },\n  {\n    character: 'helpful-peasant',\n    content: [\n      \"Lastly, if you are interested in the code running this, it is available on GitHub in this following repository:\",\n      { \n        type: 'link', \n        content: 'discount-elysium repository',\n        url: \"https://github.com/nicolas-jaussaud/discount-elysium\" \n      },\n      \"You can also take a look at the Discore repository and its documentation, it's the library used in discount-elysium.\",\n      { \n        type: 'link', \n        content: 'discore repository', \n        url: \"https://github.com/nicolas-jaussaud/discore\"\n      },\n      { \n        type: 'link', \n        content: 'discore documentation', \n        url: \"https://nicolas-jaussaud.github.io/discore/\" \n      },\n      \"If you visit the Discore documentation, please be aware that I don't know how to write and that it will be full of typos.\"\n    ],\n  },\n];\n","export default [\n  {\n    character: 'peasant',\n    content: [\n      \"Are we on a floating platform? Is this a peninsula? I can't discern whether it's a lake, a sea, or perhaps a river.\",\n      \"I wish I could spend my day relaxing, but this place doesn't make any sense.\"\n    ],\n  },\n];\n","export default [\n  {\n    character: 'chill-peasant',\n    content: [\n      \"Take a moment to relax, my friend. Enjoy the journey.\"\n    ],\n  },\n];\n","import conversation1 from './conversation1'\nimport conversation2 from './conversation2'\nimport conversation3 from './conversation3'\n\nconst init = (app, discussions) => {\n\n  discussions.characters.add('helpful-peasant', {\n    name  : 'Helpful peasant',\n    color : '#467964',\n    image : './assets/ressources/characters/peasant/images/brown.png'\n  })\n\n  discussions.characters.add('chill-peasant', {\n    name  : 'Chill peasant',\n    color : '#346786',\n    image : './assets/ressources/characters/peasant/images/blue.png'\n  })\n\n  discussions.characters.add('peasant', {\n    name  : 'Confused peasant',\n    color : '#719b8f',\n    image : './assets/ressources/characters/peasant/images/green.png'\n  })\n\n  /**\n   * Hooks trigger in discore when user click on a character\n   * \n   * If character NPC, we move to the character and if the charater is still there when we arrive\n   * we open the associated conversation\n   */\n  app.hooks.addAction('clickOnCharacter', ({ character }) => followAndTalk(character, discussions))\n}\n\nconst openConversation = (discussions, app, character) => {\n  switch(character) {\n    case 'peasant1':\n      app.stop()\n      discussions.open(conversation1, app.start)\n      break;\n    case 'peasant2':\n      app.stop()\n      discussions.open(conversation2, app.start)\n      break;\n    case 'peasant3':\n      app.stop()\n      discussions.open(conversation3, app.start)\n      break;\n  }\n}\n\nconst followAndTalk = (character, discussions, prevSquare = false) => {\n\n  const main = app.characters.getMain()\n  \n  /**\n   * Start conversation only when main user will be next to character\n   */\n  main.actions.move.start(\n    character.object.position.x,\n    character.object.position.y,\n    0\n  ).then(() => {\n\n    const characterSquare = app.map.getSquareByCoordinates({\n      x: character.object.position.x,\n      y: character.object.position.y\n    })\n    const currentSquare = app.map.getSquareByCoordinates({\n      x: main.object.position.x,\n      y: main.object.position.y\n    })\n\n    if( currentSquare.key !== characterSquare.key ) {\n      if( currentSquare !== prevSquare) followAndTalk(character, discussions, currentSquare)\n      return;\n    }\n\n    openConversation(discussions, app, character.name)\n  })\n      \n}\n\nexport { init }\n","import {\n  DirectionalLight,\n  HemisphereLight,\n  CameraHelper\n} from 'three'\n\nimport { registerSquares } from './squares'\nimport { init as initCharacters } from './characters'\nimport { init as initConversations } from './conversations/'\n\nconst init = () => {\n\n  /**\n   * @see ./discore/src\n   */\n  const app = discore.init({\n    element     : document.getElementById('app'),\n    environment : window.environment ?? process.env.NODE_ENV\n  })\n\n  /**\n   * @see ./discursed/src\n   */\n  const discussions = discursed.init({\n    element: document.getElementById('discussions')\n  })\n\n  registerSquares(app)\n\n  initCharacters(app)\n  initConversations(app, discussions)\n\n  const hemiLight = new HemisphereLight(0xFFFFFF, 0xFFFFFF, 0.7)\n  const sideLight = new DirectionalLight('rgb(255, 255, 255)', 0.1)\n\n  /**\n   * The directional light shadows works like an orthographic camera, and we need to \n   * set up left/right/top/bottom/near/far in order to see the shadows correctly\n   * \n   * @see https://threejs.org/docs/#api/en/lights/shadows/DirectionalLightShadow\n   * @see https://stackoverflow.com/a/73590527/10491705\n   * @see https://stackoverflow.com/a/44547936/10491705\n   */\n  sideLight.position.set(500, 500, 1000)\n  sideLight.castShadow = true\n  sideLight.shadow.camera.left = 2000\n  sideLight.shadow.camera.right = -2000\n  sideLight.shadow.camera.top = 2000\n  sideLight.shadow.camera.bottom = -2000\n  sideLight.shadow.camera.near = 0.1\n  sideLight.shadow.camera.far = 10000\n  \n  if( app.environment === 'development' ) {\n    app.hooks.addAction('loadComplete', () => {    \n      app.map.current.scene.add( \n        new CameraHelper( sideLight.shadow.camera ) \n      )\n    })\n  }\n\n  app.lights.push(hemiLight)\n  app.lights.push(sideLight)\n\n  /**\n   * For better performances, we only render the shadows once one the initial load\n   * instead of on every frame\n   * \n   * The drawback is that we won't have shadows for characters\n   */\n  app.hooks.addAction('mapLoaded', () => app.renderer.shadowMap.autoUpdate = true)\n  app.hooks.addAction('loadComplete', () => app.renderer.shadowMap.autoUpdate = false)\n\n  window.addEventListener('resize', () => app.updateSize(window.innerWidth, window.innerHeight))\n  window.app = app\n} \n\nwindow.addEventListener('load', init)\n"],"names":["f","i","__name","s","u","t","m","o","MeshToonMaterial","TextureLoader","BoxGeometry","app","renderCliff","scene","coordinates","config","maxHeight","cliff","createCliff","PlaneGeometry","z","e","v","n","r","d","W","c","ShaderMaterial","ShadowMaterial","Mesh","renderTree","renderGrass","tree","area","x","y","data","response","j","platform","waterPath","empty","index","value","object","item","map1","map2","b$1","renderExitPath","key","renderPath","maybeLoadMap","character","mapName","initialSquare","maps","registerSquares","renderWater","o$1","r$1","a$1","story1","story2","createCharacter","name","color","callback","attributes","folder","changeTexture","url","b","a","SphereGeometry","w","g","FrontSide","AdditiveBlending","Color","i$1","l","init","discussions","followAndTalk","openConversation","conversation1","conversation2","conversation3","prevSquare","main","characterSquare","currentSquare","HemisphereLight","DirectionalLight","CameraHelper","sideLight"],"mappings":"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"}